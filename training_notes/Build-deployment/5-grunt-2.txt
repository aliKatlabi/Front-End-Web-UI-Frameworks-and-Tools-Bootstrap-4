
we will do the same as we did in npm scripts 

	We're going to do cleaning up the distribution folder
	copying the fonts to the distribution folder
	we will also do the minification of our images using imagemin
	finally use the usemin task to build and prepare our distribution folde
	
we install first :
	npm install grunt-contrib-copy@1.0.0 --save-dev
	npm install grunt-contrib-clean@1.1.0 --save-dev
	
we need to configure the corresponding tasks to the Gruntfile.js :
        copy: {
            html: {
                files: [
                {
                    //for html
                    expand: true,
                    dot: true,
                    cwd: './',
                    src: ['*.html'],
                    dest: 'dist'
                }]                
            },
            fonts: {
                files: [
                {
                    //for font-awesome
                    expand: true,
                    dot: true,
                    cwd: 'node_modules/font-awesome',
                    src: ['fonts/*.*'],
                    dest: 'dist'
                }]
            }
        },

        clean: {
            build: {
                src: [ 'dist/']
            }
        }


Compressing and Minifying Images


	npm install grunt-contrib-imagemin@2.0.1 --save-dev
	
adding the configurations
	imagemin: {
            dynamic: {
                files: [{
                    expand: true,                  // Enable dynamic expansion
                    cwd: './',                   // Src matches are relative to this path
                    src: ['img/*.{png,jpg,gif}'],   // Actual patterns to match
                    dest: 'dist/'                  // Destination path prefix
                }]
            }
        }


we register the task build in the config

	    grunt.registerTask('build', ['clean','copy','imagemin']);
    
  
  
Preparing the Distribution Folder and Files

We are now going to use the Grunt usemin module together with concat, cssmin, uglify and filerev to prepare the distribution folder. To do this, install the following Grunt modules:



	 npm install grunt-contrib-concat@1.0.1 --save-dev
	 npm install grunt-contrib-cssmin@2.2.1 --save-dev
	 npm install grunt-contrib-htmlmin@2.4.0 --save-dev
	 npm install grunt-contrib-uglify@3.3.0 --save-dev
	 npm install grunt-filerev@2.3.1 --save-dev
	 npm install grunt-usemin@3.1.1 --save-dev

Note: filerev is needed to make a file revision as an extension to the css and html files.

	  When do we need this revisioning ?
	  
	  The browser loads the chached version of the website 
	  when the browser download the new version of our webpage it may not download the new 
	  version of the website but it may download the cached one . so we need to something to
	  change the version of the newly updated project 

example : first created version of the main.css => main.eed20a446190c326b0df
	  
...................................................

        useminPrepare: {
            foo: {
                dest: 'dist',
                src: ['contactus.html','aboutus.html','index.html']
            },
            options: {
                flow: {
                    steps: {
                        css: ['cssmin'],
                        js:['uglify']
                    },
                    post: {
                        css: [{
                            name: 'cssmin',
                            createConfig: function (context, block) {
                            var generated = context.options.generated;
                                generated.options = {
                                    keepSpecialComments: 0, rebase: false
                                };
                            }       
                        }]
                    }
                }
            }
        },

        // Concat
        concat: {
            options: {
                separator: ';'
            },
  
            // dist configuration is provided by useminPrepare
            dist: {}
        },

        // Uglify
        uglify: {
            // dist configuration is provided by useminPrepare
            dist: {}
        },

        cssmin: {
            dist: {}
        },

        // Filerev
        filerev: {
            options: {
                encoding: 'utf8',
                algorithm: 'md5',
                length: 20
            },
			
            release: {
            // filerev:release hashes(md5) all assets (images, js and css )
            // in dist directory
                files: [{
                    src: [
                        'dist/js/*.js',
                        'dist/css/*.css',
                    ]
                }]
            }
        },
  
        // Usemin
        // Replaces all assets with their revved version in html and css files.
        // options.assetDirs contains the directories for finding the assets
        // according to their relative paths
		
        usemin: {
            html: ['dist/contactus.html','dist/aboutus.html','dist/index.html'],
            options: {
                assetsDirs: ['dist', 'dist/css','dist/js']
            }
        },
		
        htmlmin: {                                         // Task
            dist: {                                        // Target
                options: {                                 // Target options
                    collapseWhitespace: true
                },
                files: {                                   // Dictionary of files
                    'dist/index.html': 'dist/index.html',  // 'destination': 'source'
                    'dist/contactus.html': 'dist/contactus.html',
                    'dist/aboutus.html': 'dist/aboutus.html',
                }
            }
        }

Next, update the jit-grunt configuration as follows, to inform it that useminPrepare task depends on the usemin package:


		require('jit-grunt')(grunt, {
		  useminPrepare: 'grunt-usemin'
		});



Next, update the Grunt build task as follows:
    grunt.registerTask('build', [
        'clean',
        'copy',
        'imagemin',
        'useminPrepare',
        'concat',
        'cssmin',
        'uglify',
        'filerev',
        'usemin',
        'htmlmin'
    ]);

..........
RUN:
	grunt build















